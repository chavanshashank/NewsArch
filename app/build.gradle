plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id("org.jlleitschuh.gradle.ktlint") version "9.2.1"
}

// Read api key credentials
def credentialFile = rootProject.file("apikey.properties")
def credentialProperty = new Properties()
credentialProperty.load(new FileInputStream(credentialFile))

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "dev.shashank.news"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        //https://guides.codepath.com/android/Storing-Secret-Keys-in-Android
        buildConfigField("String", "NEWS_API_KEY", credentialProperty['NEWS_API_KEY'])

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerVersion "1.4.0"
        kotlinCompilerExtensionVersion "1.0.0-alpha02"
    }

}


dependencies {

    //compose
    implementation "androidx.compose.ui:ui:$version_compose"
    implementation "androidx.compose.material:material:$version_compose"
    implementation "androidx.ui:ui-tooling:$version_compose"


    // Koin for Android
    implementation "org.koin:koin-android:$version_koin"
    // Koin Android Scope feature
    implementation "org.koin:koin-android-scope:$version_koin"
    // Koin Android ViewModel feature
    implementation "org.koin:koin-android-viewmodel:$version_koin"

    //networking
    implementation "com.squareup.retrofit2:retrofit:$version_retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$version_retrofit"

    //json
    implementation "com.squareup.moshi:moshi:$version_moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$version_moshi"

    //coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_kotlin_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_kotlin_coroutines"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$version_lifecycle"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$version_lifecycle"

    //Image loading
    implementation "com.github.bumptech.glide:glide:${version_glide}"
    kapt "com.github.bumptech.glide:compiler:${version_glide}"

    //Room Database
    implementation "androidx.room:room-runtime:$version_room"
    implementation "androidx.room:room-ktx:$version_room"
    kapt "androidx.room:room-compiler:$version_room"



    implementation "org.jetbrains.kotlin:kotlin-stdlib:$version_kotlin"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$version_kotlin"

    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.0'

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}